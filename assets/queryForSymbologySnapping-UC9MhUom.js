import{jn as O,c0 as D,jo as P,jp as E,aa as z,jq as G,jr as N,js as A,jt as B,ju as H,cN as J}from"./index--fOyh5XL.js";async function $(a,d,l,p,o){const{elevationProvider:f,renderCoordsHelper:c}=a,{elevationInfo:g}=d,{pointsInFeatures:w,spatialReference:h}=p,y=D.fromJSON(h),j=P(g,!0),I=await E(j,y,o);z(o);const i=[],e=new Set,t=new Set;u.spatialReference=y;const s=a.elevationProvider.spatialReference??a.spatialReference;for(const{objectId:n,points:r}of w){const m=l(n);if(m==null){for(const R of r)i.push(R.z??0);e.add(n);continue}m.isDraped&&t.add(n);const q=m.graphic.geometry;S.setFromElevationInfo(G(q,g)),S.updateFeatureExpressionInfoContext(I,m.graphic,d);for(const{x:R,y:C,z:F}of r)u.x=R,u.y=C,u.z=F??0,await N(u,v,s,0,{signal:o}),A(v,f,S,c,b),i.push(b.z)}return{elevations:i,drapedObjectIds:t,failedObjectIds:e}}const S=new B,u=O(0,0,0,D.WGS84),b=new H,v=[0,0,0];async function k(a,d,l){if(a==null||d.candidates.length===0)return x;const p=a.graphics3DGraphicsByObjectID??a.graphics3DGraphics,o=[],f=[],{renderer:c}=a,g=c!=null&&"arcadeRequired"in c&&c.arcadeRequired?J():null,w=async(e,{graphic:t,graphics3DSymbol:s})=>{const n=await g,r=await a.getRenderingInfoAsync(t,c,n,{signal:l});return r==null?[]:s.queryForSnapping(e,y,r,l)},{candidates:h,spatialReference:y}=d;for(let e=0;e<h.length;++e){const t=h[e],{objectId:s}=t,n=typeof s=="number"?p==null?void 0:p.get(s):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(o.push(w(t,n)),f.push(e))}if(o.length===0)return x;const j=await Promise.all(o);z(l);const I=[],i=[];for(let e=0;e<j.length;++e){const t=j[e],s=f[e];for(const n of t)I.push(n),i.push(s)}return{candidates:I,sourceCandidateIndices:i}}const x={candidates:[],sourceCandidateIndices:[]};export{$ as c,k as r};
