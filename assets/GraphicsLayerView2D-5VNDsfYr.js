import{eY as p,cS as g,K as o,t as c,V as l,k as n,aN as r,E as a,F as d,H as m}from"./index-VvDgqKaS.js";import{i as u}from"./GraphicContainer-K6gY0exR.js";import{r as w}from"./GraphicsView2D-pXdAWAd4.js";import"./BaseGraphicContainer-FvgeT5aQ.js";import"./FeatureContainer-tJ3YTVuM.js";import"./AttributeStoreView-OR45S_Lz.js";import"./visualVariablesUtils-sspFl1_n.js";import"./cimAnalyzer-MIAdrVOL.js";import"./BidiEngine-8z8MVveq.js";import"./labelPoint-1wm0QAjd.js";import"./Rect-pT1ASav_.js";import"./ExpandedCIM-OcW5nORE.js";import"./util-nR5wxBXD.js";import"./TileContainer-y8lH0oYw.js";import"./normalizeUtilsSync-qycEtZ1a.js";import"./projectionSupport-JvjEZUGs.js";import"./json-v6EOeNTY.js";import"./Matcher-OkHPX9cs.js";import"./tileUtils-pcBJnprf.js";import"./TurboLine-zZFZrrgO.js";import"./ComputedAttributeStorage-SjfM3jYM.js";import"./TimeOnly-4P0SSB7S.js";let s=class extends p(g){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new w({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new u(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=o(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof c?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(e=>e&&e.uid):l.isCollection(i)&&i.length>0&&(t=i.map(e=>e&&e.uid).toArray());const h=t==null?void 0:t.filter(n);return h!=null&&h.length?(this._addHighlight(h),r(()=>this._removeHighlight(h))):r()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const h=this._highlightIds.get(t);this._highlightIds.set(t,h+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const h=this._highlightIds.get(t)-1;h===0?this._highlightIds.delete(t):this._highlightIds.set(t,h)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};a([d()],s.prototype,"graphicsView",void 0),s=a([m("esri.views.2d.layers.GraphicsLayerView2D")],s);const K=s;export{K as default};
