import{E as i,F as s,H as p,d0 as m,x as l,s as a,bS as n}from"./index--fOyh5XL.js";import{_ as y}from"./FeatureLayerViewBase3D-hkBGtdYL.js";import"./HeatmapDensity.glsl-OzH5TwdB.js";import"./dehydratedFeatureComparison-Tvp80EqO.js";import"./queryForSymbologySnapping-UC9MhUom.js";import"./hash-SS5GKVPY.js";import"./Graphics3DObjectStates-S7BKZG8o.js";import"./rendererConversion-jw1L0KSF.js";import"./optimizedFeatureQueryEngineAdapter-1IHiGls0.js";import"./PooledRBush-CJda0HC2.js";import"./QueryEngine-JJ3ven8x.js";import"./WhereClause-BbimIHLe.js";import"./TimeOnly-gwmTTSeT.js";import"./timeSupport-kOF5XP_n.js";import"./projectionSupport-vABirATK.js";import"./json-v6EOeNTY.js";import"./FeatureStore-7xCFO8qC.js";import"./BoundsStore-etPx_jby.js";import"./projectExtentUtils-BVEy2MPH.js";import"./LayerView3D-G13Q5ne8.js";import"./EventedSet-ZofPhEyh.js";import"./FeatureLayerView-K9Lt8u9W.js";let t=class extends y{constructor(){super(...arguments),this.type="feature-3d",this.direct3DObjectFeatureLayerDisplayEnabled=m()}initialize(){var o;const{layer:e,view:r}=this;(o=l(e))!=null&&o.operations.supportsQuery||this.addResolvingPromise(Promise.reject(new a("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e}))),e.infoFor3D!=null&&(this.direct3DObjectFeatureLayerDisplayEnabled?this._set("suspendResumeExtentMode","computed"):this.addResolvingPromise(Promise.reject(new a("featurelayerview3d:unsupported-geometry-type",`Unsupported geometry type ${e.geometryType}`)))),e.geometryType!=="mesh"||n(e.spatialReference,r.spatialReference)||this.addResolvingPromise(Promise.reject(new a("layerview:spatial-reference-incompatible","The spatial references of the feature layer is incompatible with the spatial reference of the view")))}get featureSpatialReference(){var e,r;return(r=(e=this.view.featureTiles)==null?void 0:e.tilingScheme)==null?void 0:r.spatialReference}};i([s({constructOnly:!0})],t.prototype,"direct3DObjectFeatureLayerDisplayEnabled",void 0),i([s()],t.prototype,"layer",void 0),t=i([p("esri.views.3d.layers.FeatureLayerView3D")],t);const _=t;export{_ as default};
