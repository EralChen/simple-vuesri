import{E as s,F as o,H as u,e7 as k,M as $,K as g,gd as R,aF as f,t as T,aC as C,s as E,aL as G,cS as P}from"./index--fOyh5XL.js";import{o as j}from"./StreamFeatureManager-O1xH8FHK.js";import{createConnection as x}from"./createConnection-hsz5SU8q.js";import{r as U}from"./EventedSet-ZofPhEyh.js";import{E as F}from"./HeatmapDensity.glsl-OzH5TwdB.js";import{n as V}from"./LayerView3D-G13Q5ne8.js";import{o as L}from"./StreamLayerView-1U2Wgb75.js";import"./CircularArray-1_thnT0U.js";import"./dehydratedFeatureComparison-Tvp80EqO.js";import"./queryForSymbologySnapping-UC9MhUom.js";import"./hash-SS5GKVPY.js";import"./Graphics3DObjectStates-S7BKZG8o.js";import"./rendererConversion-jw1L0KSF.js";import"./optimizedFeatureQueryEngineAdapter-1IHiGls0.js";import"./PooledRBush-CJda0HC2.js";import"./QueryEngine-JJ3ven8x.js";import"./WhereClause-BbimIHLe.js";import"./TimeOnly-gwmTTSeT.js";import"./timeSupport-kOF5XP_n.js";import"./projectionSupport-vABirATK.js";import"./json-v6EOeNTY.js";import"./FeatureStore-7xCFO8qC.js";import"./BoundsStore-etPx_jby.js";import"./projectExtentUtils-BVEy2MPH.js";const N=2500;let d=class extends T{getObjectId(){return this.objectId}};s([o({type:Number,json:{read:!0}})],d.prototype,"objectId",void 0),d=s([u("esri.layers.graphics.controllers.StreamGraphic")],d);let H=class{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const t=this._idToGraphic.get(e);return t?(t.sourceLayer=t.layer=null,this._idToGraphic.delete(e),t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._idToGraphic.size}},n=class extends k($){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new U,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._clearInterval(),this.connection=g(this.connection),this.store=g(this.store),this.graphics.clear(),this.removeAllHandles()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{layer:e,layerView:t}=this,{spatialReference:l,definitionExpression:c,geometryDefinition:h,objectIdField:p,timeInfo:_,purgeOptions:v,maxReconnectionAttempts:I,maxReconnectionInterval:w,customParameters:S}=e,b=e.geometryType?R.toJSON(e.geometryType):null,M=l,m=t.view.spatialReference,O={geometry:h,where:c};this.clear(),this._set("connection",x(e.parsedUrl,M,m,b,O,I,w,S??void 0)),this._outSpatialReference=m.toJSON(),this.store=new H(this._onUpdate.bind(this)),this.featuresManager=new j(this.store,p,_.toJSON(),v);const y="startup-watches";this.removeHandles(y),this.addHandles([e.on("send-message-to-socket",a=>this.connection.sendMessageToSocket(a)),e.on("send-message-to-client",a=>this.connection.sendMessageToClient(a)),this.connection.on("data-received",a=>this._onFeature(a)),this.connection.on("message-received",a=>this._onWebSocketMessage(a)),f(()=>[e.definitionExpression,e.geometryDefinition,e.purgeOptions],()=>this._startup())],y),this.isPaused||this._initUpdateInterval()}_onWebSocketMessage(e){if(this.layerView.emit("message-received",e),"type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this.featuresManager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this.featuresManager.removeByTrackId(t);break;case"clear":this.store.forEach(t=>this.featuresManager.removeById(t.objectId))}}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{e.geometry==null||e.geometry.spatialReference||(e.geometry.spatialReference=this._outSpatialReference);const t=d.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){t!=null&&this.graphics.removeMany(t),e!=null&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}_initUpdateInterval(){this._clearInterval();const{updateInterval:e}=this.layer;let t=performance.now();this._updateIntervalId=setInterval(()=>{const l=performance.now(),c=l-t;if(c>N){t=l;const h=Math.round(this._updateInfo.client/(c/1e3)),p=Math.round(this._updateInfo.websocket/(c/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:h,websocket:p})}this.featuresManager.checkForUpdates()},e)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}};s([o()],n.prototype,"isPaused",void 0),s([o({constructOnly:!0})],n.prototype,"layer",void 0),s([o({constructOnly:!0})],n.prototype,"layerView",void 0),s([o()],n.prototype,"connection",void 0),s([o({readOnly:!0})],n.prototype,"updating",null),n=s([u("esri.layers.graphics.controllers.StreamController")],n);let i=class extends L(F(V(P))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=C.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.addHandles(f(()=>this.suspended,r=>{this.controller&&this._onSuspendedChange(r)}))}get connectionError(){var e,t;const r=(t=(e=this.controller)==null?void 0:e.connection)==null?void 0:t.errorString;return r?new E("stream-controller",r):null}createQuery(){return new G({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(r,e){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(r),e==null?void 0:e.signal)}get _streamConnectionStatus(){var r,e;return((e=(r=this.controller)==null?void 0:r.connection)==null?void 0:e.connectionStatus)??"disconnected"}createController(){return new n({layer:this.layer,layerView:this})}beforeSetController(){}_doPause(){var r;(r=this.controller)==null||r.pauseStream()}_doResume(){var r;(r=this.controller)==null||r.resumeStream()}};s([o({readOnly:!0})],i.prototype,"updatePolicy",void 0),s([o({readOnly:!0})],i.prototype,"connectionError",null),s([o()],i.prototype,"controller",void 0),s([o({readOnly:!0})],i.prototype,"hasZ",void 0),s([o({readOnly:!0})],i.prototype,"hasM",void 0),s([o({readOnly:!0})],i.prototype,"_streamConnectionStatus",null),i=s([u("esri.views.3d.layers.StreamLayerView3D")],i);const me=i;export{me as default};
