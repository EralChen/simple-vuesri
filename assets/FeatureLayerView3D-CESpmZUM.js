import{E as i,F as s,H as p,d0 as m,x as l,s as a,bS as n}from"./index-VvDgqKaS.js";import{_ as y}from"./FeatureLayerViewBase3D-O3w90a_D.js";import"./HeatmapDensity.glsl-SptnLZpW.js";import"./dehydratedFeatureComparison-hLkDFZD_.js";import"./queryForSymbologySnapping-nTVfgvPu.js";import"./hash-SS5GKVPY.js";import"./Graphics3DObjectStates-3cU_Cvpi.js";import"./rendererConversion-A4MTa92Z.js";import"./optimizedFeatureQueryEngineAdapter-_IgNgtMa.js";import"./PooledRBush-5VN_z3gb.js";import"./QueryEngine-8kgHgtHC.js";import"./WhereClause-7O6JrKjE.js";import"./TimeOnly-4P0SSB7S.js";import"./timeSupport-a5Ob1kNu.js";import"./projectionSupport-JvjEZUGs.js";import"./json-v6EOeNTY.js";import"./FeatureStore-AUFLSemZ.js";import"./BoundsStore-Aid5j_ZA.js";import"./projectExtentUtils-S__UzKSJ.js";import"./LayerView3D-PT_wn6Cq.js";import"./EventedSet-fb6oJDdB.js";import"./FeatureLayerView-sp-_zMz2.js";let t=class extends y{constructor(){super(...arguments),this.type="feature-3d",this.direct3DObjectFeatureLayerDisplayEnabled=m()}initialize(){var o;const{layer:e,view:r}=this;(o=l(e))!=null&&o.operations.supportsQuery||this.addResolvingPromise(Promise.reject(new a("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e}))),e.infoFor3D!=null&&(this.direct3DObjectFeatureLayerDisplayEnabled?this._set("suspendResumeExtentMode","computed"):this.addResolvingPromise(Promise.reject(new a("featurelayerview3d:unsupported-geometry-type",`Unsupported geometry type ${e.geometryType}`)))),e.geometryType!=="mesh"||n(e.spatialReference,r.spatialReference)||this.addResolvingPromise(Promise.reject(new a("layerview:spatial-reference-incompatible","The spatial references of the feature layer is incompatible with the spatial reference of the view")))}get featureSpatialReference(){var e,r;return(r=(e=this.view.featureTiles)==null?void 0:e.tilingScheme)==null?void 0:r.spatialReference}};i([s({constructOnly:!0})],t.prototype,"direct3DObjectFeatureLayerDisplayEnabled",void 0),i([s()],t.prototype,"layer",void 0),t=i([p("esri.views.3d.layers.FeatureLayerView3D")],t);const _=t;export{_ as default};
